{
  "uid" : "f38f13afbfc6c8c6",
  "name" : "test_withdraw_with_twenty_times",
  "fullName" : "withdraw_test#test_withdraw_with_twenty_times",
  "historyId" : "70c75ef9b243788dd09074e54376b0bf",
  "time" : {
    "start" : 1593597996761,
    "stop" : 1593598002093,
    "duration" : 5332
  },
  "status" : "broken",
  "statusMessage" : "ValueError: This scenario's response incorrect: {'status_code': 200, 'status': 'OK', 'msg': '成功', 'amount': 20.0, 'availableScore': 2404.559, 'returnMessage': '成功'}\n2020-07-01 18:06:42",
  "statusTrace" : "username = 'wade02', pwd = 'a111222', funds_pwd = 'a12345', amount = 20, around_times = 1\n\n    @allure.feature(\"Minus\")\n    @allure.step('step')\n    @pytest.mark.run(order=5)\n    # 須今日無任何提現紀錄的帳號測試\n    # around_times輸入的次數就等於超過20之後的次數\n    # 確認msg出現\"系統錯誤\"的情境後排除(已排除)\n    # 可用test08, wade02\n    def test_withdraw_with_twenty_times(username='wade02', pwd='a111222', funds_pwd='a12345', amount=20, around_times=1):\n    \n        over_twenty_times = 0\n        error = 0\n        count = 0\n        times = 0\n    \n        b.login(username, pwd)\n    \n        for i in range(int('20')+int('%s' % around_times)):\n            withdraw = b.withdraw(username, funds_pwd, amount)\n            time.sleep(0.8)\n            times += 1\n    \n            if withdraw['msg'] == '单日提现及下线转账次数不可超过20次':\n                logging.debug('第%s次超過20次的提現流程' % over_twenty_times)\n                over_twenty_times += 1\n    \n                lis = [\n                    withdraw['status_code'] == 200,\n                    withdraw['status'] == 'NG',\n                    withdraw['msg'] == '单日提现及下线转账次数不可超过20次',\n                    withdraw['returnMessage'] == '单日提现及下线转账次数不可超过20次'\n                ]\n    \n                for judge in lis:\n                    count += 1\n                    if not judge:\n                        error += 1\n                        logging.debug('錯在lis的第%s行' % count)\n                logging.debug('Response msg: ', withdraw)\n    \n            else:\n                raise ValueError(\"This scenario's response incorrect: %s\\n%s\" %\n>                                (withdraw, time.strftime('%Y-%m-%d %H:%M:%S')))\nE               ValueError: This scenario's response incorrect: {'status_code': 200, 'status': 'OK', 'msg': '成功', 'amount': 20.0, 'availableScore': 2404.559, 'returnMessage': '成功'}\nE               2020-07-01 18:06:42\n\nwithdraw_test.py:263: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "ValueError: This scenario's response incorrect: {'status_code': 200, 'status': 'OK', 'msg': '成功', 'amount': 20.0, 'availableScore': 2404.559, 'returnMessage': '成功'}\n2020-07-01 18:06:42",
    "statusTrace" : "username = 'wade02', pwd = 'a111222', funds_pwd = 'a12345', amount = 20, around_times = 1\n\n    @allure.feature(\"Minus\")\n    @allure.step('step')\n    @pytest.mark.run(order=5)\n    # 須今日無任何提現紀錄的帳號測試\n    # around_times輸入的次數就等於超過20之後的次數\n    # 確認msg出現\"系統錯誤\"的情境後排除(已排除)\n    # 可用test08, wade02\n    def test_withdraw_with_twenty_times(username='wade02', pwd='a111222', funds_pwd='a12345', amount=20, around_times=1):\n    \n        over_twenty_times = 0\n        error = 0\n        count = 0\n        times = 0\n    \n        b.login(username, pwd)\n    \n        for i in range(int('20')+int('%s' % around_times)):\n            withdraw = b.withdraw(username, funds_pwd, amount)\n            time.sleep(0.8)\n            times += 1\n    \n            if withdraw['msg'] == '单日提现及下线转账次数不可超过20次':\n                logging.debug('第%s次超過20次的提現流程' % over_twenty_times)\n                over_twenty_times += 1\n    \n                lis = [\n                    withdraw['status_code'] == 200,\n                    withdraw['status'] == 'NG',\n                    withdraw['msg'] == '单日提现及下线转账次数不可超过20次',\n                    withdraw['returnMessage'] == '单日提现及下线转账次数不可超过20次'\n                ]\n    \n                for judge in lis:\n                    count += 1\n                    if not judge:\n                        error += 1\n                        logging.debug('錯在lis的第%s行' % count)\n                logging.debug('Response msg: ', withdraw)\n    \n            else:\n                raise ValueError(\"This scenario's response incorrect: %s\\n%s\" %\n>                                (withdraw, time.strftime('%Y-%m-%d %H:%M:%S')))\nE               ValueError: This scenario's response incorrect: {'status_code': 200, 'status': 'OK', 'msg': '成功', 'amount': 20.0, 'availableScore': 2404.559, 'returnMessage': '成功'}\nE               2020-07-01 18:06:42\n\nwithdraw_test.py:263: ValueError",
    "steps" : [ {
      "name" : "step",
      "time" : {
        "start" : 1593597996761,
        "stop" : 1593598002092,
        "duration" : 5331
      },
      "status" : "broken",
      "statusMessage" : "ValueError: This scenario's response incorrect: {'status_code': 200, 'status': 'OK', 'msg': '成功', 'amount': 20.0, 'availableScore': 2404.559, 'returnMessage': '成功'}\n2020-07-01 18:06:42\n",
      "statusTrace" : "  File \"c:\\users\\welly.chiang\\venv\\owmtest\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\welly.chiang\\PycharmProjects\\Owmtest\\baoApi\\withdraw_test.py\", line 263, in test_withdraw_with_twenty_times\n    (withdraw, time.strftime('%Y-%m-%d %H:%M:%S')))\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "username",
        "value" : "'wade02'"
      }, {
        "name" : "pwd",
        "value" : "'a111222'"
      }, {
        "name" : "funds_pwd",
        "value" : "'a12345'"
      }, {
        "name" : "amount",
        "value" : "20"
      }, {
        "name" : "around_times",
        "value" : "1"
      } ],
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "3df6ec61323f32ef",
      "name" : "log",
      "source" : "3df6ec61323f32ef.txt",
      "type" : "text/plain",
      "size" : 1377
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Minus"
  }, {
    "name" : "tag",
    "value" : "run(order=5)"
  }, {
    "name" : "suite",
    "value" : "withdraw_test"
  }, {
    "name" : "host",
    "value" : "CC-1902009"
  }, {
    "name" : "thread",
    "value" : "87764-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "withdraw_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "run(order=5)" ]
  },
  "source" : "f38f13afbfc6c8c6.json",
  "parameterValues" : [ ]
}