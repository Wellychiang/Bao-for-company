{
  "uid" : "6f3da4fe5abb88b4",
  "name" : "test_withdraw_with_incomplete_and_fundpassword",
  "fullName" : "withdraw_test#test_withdraw_with_incomplete_and_fundpassword",
  "historyId" : "f2a41c2702eeef42b819051dc4209661",
  "time" : {
    "start" : 1593597942516,
    "stop" : 1593597994365,
    "duration" : 51849
  },
  "status" : "broken",
  "statusMessage" : "TypeError: not all arguments converted during string formatting",
  "statusTrace" : "name = ['wade01', 'wade03'], range_num = 2, pwd = 'a111222'\n\n    @allure.feature('Minus')\n    @allure.step('step')\n    @pytest.mark.run(order=3)\n    # 目前判斷有無帳號卡、金額邊界(20~499)的response資料是否正確,有可以判斷錯誤在哪的簡易機制(判定當下組別所有錯誤)\n    # name變數裡的值\"第一個\"必須要是有足夠餘額有卡的, 第二個要是沒卡的\n    def test_withdraw_with_incomplete_and_fundpassword(name=None, range_num=2, pwd='a111222'):\n        if name is None:\n            name = ['wade01', 'wade03']\n        fun_pwd = ['a12345', '', '       ', '我的天ㄚㄚㄚ', '!@#!@#!@#', 'a1234', 'a123456789012345']\n        a_amount = ['', 0, 19, 20, 499, 500]\n    \n        error = 0\n        count = 0\n        wade01_success = 0\n        wade01_quota = 0  # 限額\n        wade03_no_card = 0\n        wade01_info_incomplete = 0\n        wade03_info_incomplete = 0\n        wade01_wrong_fund_pwd = 0\n    \n        for i in range(range_num):\n            for username in name:\n                b.login(username, pwd)\n                for amount in a_amount:\n                    for fund_pwd in fun_pwd:\n                        withdraw = b.withdraw(username, fund_pwd, amount)\n                        time.sleep(1)\n                        score = b.get_user_score()\n    \n                        if username == name[0]:\n                            if withdraw['msg'] == '成功':\n                                wade01_success += 1\n>                               logging.debug('成功流程' % username)\nE                               TypeError: not all arguments converted during string formatting\n\nwithdraw_test.py:86: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "TypeError: not all arguments converted during string formatting",
    "statusTrace" : "name = ['wade01', 'wade03'], range_num = 2, pwd = 'a111222'\n\n    @allure.feature('Minus')\n    @allure.step('step')\n    @pytest.mark.run(order=3)\n    # 目前判斷有無帳號卡、金額邊界(20~499)的response資料是否正確,有可以判斷錯誤在哪的簡易機制(判定當下組別所有錯誤)\n    # name變數裡的值\"第一個\"必須要是有足夠餘額有卡的, 第二個要是沒卡的\n    def test_withdraw_with_incomplete_and_fundpassword(name=None, range_num=2, pwd='a111222'):\n        if name is None:\n            name = ['wade01', 'wade03']\n        fun_pwd = ['a12345', '', '       ', '我的天ㄚㄚㄚ', '!@#!@#!@#', 'a1234', 'a123456789012345']\n        a_amount = ['', 0, 19, 20, 499, 500]\n    \n        error = 0\n        count = 0\n        wade01_success = 0\n        wade01_quota = 0  # 限額\n        wade03_no_card = 0\n        wade01_info_incomplete = 0\n        wade03_info_incomplete = 0\n        wade01_wrong_fund_pwd = 0\n    \n        for i in range(range_num):\n            for username in name:\n                b.login(username, pwd)\n                for amount in a_amount:\n                    for fund_pwd in fun_pwd:\n                        withdraw = b.withdraw(username, fund_pwd, amount)\n                        time.sleep(1)\n                        score = b.get_user_score()\n    \n                        if username == name[0]:\n                            if withdraw['msg'] == '成功':\n                                wade01_success += 1\n>                               logging.debug('成功流程' % username)\nE                               TypeError: not all arguments converted during string formatting\n\nwithdraw_test.py:86: TypeError",
    "steps" : [ {
      "name" : "step",
      "time" : {
        "start" : 1593597942516,
        "stop" : 1593597994365,
        "duration" : 51849
      },
      "status" : "broken",
      "statusMessage" : "TypeError: not all arguments converted during string formatting\n",
      "statusTrace" : "  File \"c:\\users\\welly.chiang\\venv\\owmtest\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\welly.chiang\\PycharmProjects\\Owmtest\\baoApi\\withdraw_test.py\", line 86, in test_withdraw_with_incomplete_and_fundpassword\n    logging.debug('成功流程' % username)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "name",
        "value" : "None"
      }, {
        "name" : "range_num",
        "value" : "2"
      }, {
        "name" : "pwd",
        "value" : "'a111222'"
      } ],
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "c3c98cca040b3c09",
      "name" : "log",
      "source" : "c3c98cca040b3c09.txt",
      "type" : "text/plain",
      "size" : 29094
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Minus"
  }, {
    "name" : "tag",
    "value" : "run(order=3)"
  }, {
    "name" : "suite",
    "value" : "withdraw_test"
  }, {
    "name" : "host",
    "value" : "CC-1902009"
  }, {
    "name" : "thread",
    "value" : "87764-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "withdraw_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "run(order=3)" ]
  },
  "source" : "6f3da4fe5abb88b4.json",
  "parameterValues" : [ ]
}